#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace JalousiePrint.Data
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="")]
	public partial class JalousieLinqDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertЖалюзи_бланки(Жалюзи_бланки instance);
    partial void UpdateЖалюзи_бланки(Жалюзи_бланки instance);
    partial void DeleteЖалюзи_бланки(Жалюзи_бланки instance);
    partial void InsertЖалюзи_бланки_структура(Жалюзи_бланки_структура instance);
    partial void UpdateЖалюзи_бланки_структура(Жалюзи_бланки_структура instance);
    partial void DeleteЖалюзи_бланки_структура(Жалюзи_бланки_структура instance);
    partial void InsertЖалюзи_заказы_позиции(Жалюзи_заказы_позиции instance);
    partial void UpdateЖалюзи_заказы_позиции(Жалюзи_заказы_позиции instance);
    partial void DeleteЖалюзи_заказы_позиции(Жалюзи_заказы_позиции instance);
    partial void InsertЖалюзи_заказы_позиции_структура(Жалюзи_заказы_позиции_структура instance);
    partial void UpdateЖалюзи_заказы_позиции_структура(Жалюзи_заказы_позиции_структура instance);
    partial void DeleteЖалюзи_заказы_позиции_структура(Жалюзи_заказы_позиции_структура instance);
    partial void InsertЖалюзи_бланки_вывод(Жалюзи_бланки_вывод instance);
    partial void UpdateЖалюзи_бланки_вывод(Жалюзи_бланки_вывод instance);
    partial void DeleteЖалюзи_бланки_вывод(Жалюзи_бланки_вывод instance);
    #endregion
		
		public JalousieLinqDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public JalousieLinqDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public JalousieLinqDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public JalousieLinqDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Жалюзи_бланки> Жалюзи_бланкиs
		{
			get
			{
				return this.GetTable<Жалюзи_бланки>();
			}
		}
		
		public System.Data.Linq.Table<Жалюзи_бланки_структура> Жалюзи_бланки_структураs
		{
			get
			{
				return this.GetTable<Жалюзи_бланки_структура>();
			}
		}
		
		public System.Data.Linq.Table<Жалюзи_заказы_позиции> Жалюзи_заказы_позицииs
		{
			get
			{
				return this.GetTable<Жалюзи_заказы_позиции>();
			}
		}
		
		public System.Data.Linq.Table<Жалюзи_заказы_позиции_структура> Жалюзи_заказы_позиции_структураs
		{
			get
			{
				return this.GetTable<Жалюзи_заказы_позиции_структура>();
			}
		}
		
		public System.Data.Linq.Table<Жалюзи_все_справочники> Жалюзи_все_справочникиs
		{
			get
			{
				return this.GetTable<Жалюзи_все_справочники>();
			}
		}
		
		public System.Data.Linq.Table<Жалюзи_все_справочники_содержание> Жалюзи_все_справочники_содержаниеs
		{
			get
			{
				return this.GetTable<Жалюзи_все_справочники_содержание>();
			}
		}
		
		public System.Data.Linq.Table<Жалюзи_бланки_вывод> Жалюзи_бланки_выводs
		{
			get
			{
				return this.GetTable<Жалюзи_бланки_вывод>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Отчеты_жалюзи_заголовок", IsComposable=true)]
		public IQueryable<Отчеты_жалюзи_заголовокResult> Отчеты_жалюзи_заголовок([global::System.Data.Linq.Mapping.ParameterAttribute(Name="OrderId", DbType="Int")] System.Nullable<int> orderId)
		{
			return this.CreateMethodCallQuery<Отчеты_жалюзи_заголовокResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), orderId);
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Жалюзи_бланки")]
	public partial class Жалюзи_бланки : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Код;
		
		private int _Код_фирмы;
		
		private int _Код_типа;
		
		private string _Описание;
		
		private int _Первая_позиция;
		
		private int _Максимум_позиций;
		
		private string _Предварительный_бланк;
		
		private string _Номер_заказа;
		
		private string _Дата;
		
		private string _Клиент;
		
		private string _Телефон;
		
		private string _Установщик;
		
		private string _Сумма;
		
		private string _Предоплата;
		
		private string _Срок_исполнения;
		
		private string _Цена;
		
		private string _Количество;
		
		private string _Скидка;
		
		private bool _Активен;
		
		private string _Название_магазина;
		
		private string _Телефон_магазина;
		
		private string _Дополнительно;
		
		private string _Реквизиты;
		
		private EntitySet<Жалюзи_бланки_структура> _Жалюзи_бланки_структураs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnКодChanging(int value);
    partial void OnКодChanged();
    partial void OnКод_фирмыChanging(int value);
    partial void OnКод_фирмыChanged();
    partial void OnКод_типаChanging(int value);
    partial void OnКод_типаChanged();
    partial void OnОписаниеChanging(string value);
    partial void OnОписаниеChanged();
    partial void OnПервая_позицияChanging(int value);
    partial void OnПервая_позицияChanged();
    partial void OnМаксимум_позицийChanging(int value);
    partial void OnМаксимум_позицийChanged();
    partial void OnПредварительный_бланкChanging(string value);
    partial void OnПредварительный_бланкChanged();
    partial void OnНомер_заказаChanging(string value);
    partial void OnНомер_заказаChanged();
    partial void OnДатаChanging(string value);
    partial void OnДатаChanged();
    partial void OnКлиентChanging(string value);
    partial void OnКлиентChanged();
    partial void OnТелефонChanging(string value);
    partial void OnТелефонChanged();
    partial void OnУстановщикChanging(string value);
    partial void OnУстановщикChanged();
    partial void OnСуммаChanging(string value);
    partial void OnСуммаChanged();
    partial void OnПредоплатаChanging(string value);
    partial void OnПредоплатаChanged();
    partial void OnСрок_исполненияChanging(string value);
    partial void OnСрок_исполненияChanged();
    partial void OnЦенаChanging(string value);
    partial void OnЦенаChanged();
    partial void OnКоличествоChanging(string value);
    partial void OnКоличествоChanged();
    partial void OnСкидкаChanging(string value);
    partial void OnСкидкаChanged();
    partial void OnАктивенChanging(bool value);
    partial void OnАктивенChanged();
    partial void OnНазвание_магазинаChanging(string value);
    partial void OnНазвание_магазинаChanged();
    partial void OnТелефон_магазинаChanging(string value);
    partial void OnТелефон_магазинаChanged();
    partial void OnДополнительноChanging(string value);
    partial void OnДополнительноChanged();
    partial void OnРеквизитыChanging(string value);
    partial void OnРеквизитыChanged();
    #endregion
		
		public Жалюзи_бланки()
		{
			this._Жалюзи_бланки_структураs = new EntitySet<Жалюзи_бланки_структура>(new Action<Жалюзи_бланки_структура>(this.attach_Жалюзи_бланки_структураs), new Action<Жалюзи_бланки_структура>(this.detach_Жалюзи_бланки_структураs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Код", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Код
		{
			get
			{
				return this._Код;
			}
			set
			{
				if ((this._Код != value))
				{
					this.OnКодChanging(value);
					this.SendPropertyChanging();
					this._Код = value;
					this.SendPropertyChanged("Код");
					this.OnКодChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Код фирмы]", Storage="_Код_фирмы", DbType="Int NOT NULL")]
		public int Код_фирмы
		{
			get
			{
				return this._Код_фирмы;
			}
			set
			{
				if ((this._Код_фирмы != value))
				{
					this.OnКод_фирмыChanging(value);
					this.SendPropertyChanging();
					this._Код_фирмы = value;
					this.SendPropertyChanged("Код_фирмы");
					this.OnКод_фирмыChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Код типа]", Storage="_Код_типа", DbType="Int NOT NULL")]
		public int Код_типа
		{
			get
			{
				return this._Код_типа;
			}
			set
			{
				if ((this._Код_типа != value))
				{
					this.OnКод_типаChanging(value);
					this.SendPropertyChanging();
					this._Код_типа = value;
					this.SendPropertyChanged("Код_типа");
					this.OnКод_типаChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Описание", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string Описание
		{
			get
			{
				return this._Описание;
			}
			set
			{
				if ((this._Описание != value))
				{
					this.OnОписаниеChanging(value);
					this.SendPropertyChanging();
					this._Описание = value;
					this.SendPropertyChanged("Описание");
					this.OnОписаниеChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Первая позиция]", Storage="_Первая_позиция", DbType="Int NOT NULL")]
		public int Первая_позиция
		{
			get
			{
				return this._Первая_позиция;
			}
			set
			{
				if ((this._Первая_позиция != value))
				{
					this.OnПервая_позицияChanging(value);
					this.SendPropertyChanging();
					this._Первая_позиция = value;
					this.SendPropertyChanged("Первая_позиция");
					this.OnПервая_позицияChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Максимум позиций]", Storage="_Максимум_позиций", DbType="Int NOT NULL")]
		public int Максимум_позиций
		{
			get
			{
				return this._Максимум_позиций;
			}
			set
			{
				if ((this._Максимум_позиций != value))
				{
					this.OnМаксимум_позицийChanging(value);
					this.SendPropertyChanging();
					this._Максимум_позиций = value;
					this.SendPropertyChanged("Максимум_позиций");
					this.OnМаксимум_позицийChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Предварительный бланк]", Storage="_Предварительный_бланк", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string Предварительный_бланк
		{
			get
			{
				return this._Предварительный_бланк;
			}
			set
			{
				if ((this._Предварительный_бланк != value))
				{
					this.OnПредварительный_бланкChanging(value);
					this.SendPropertyChanging();
					this._Предварительный_бланк = value;
					this.SendPropertyChanged("Предварительный_бланк");
					this.OnПредварительный_бланкChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Номер заказа]", Storage="_Номер_заказа", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string Номер_заказа
		{
			get
			{
				return this._Номер_заказа;
			}
			set
			{
				if ((this._Номер_заказа != value))
				{
					this.OnНомер_заказаChanging(value);
					this.SendPropertyChanging();
					this._Номер_заказа = value;
					this.SendPropertyChanged("Номер_заказа");
					this.OnНомер_заказаChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Дата", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string Дата
		{
			get
			{
				return this._Дата;
			}
			set
			{
				if ((this._Дата != value))
				{
					this.OnДатаChanging(value);
					this.SendPropertyChanging();
					this._Дата = value;
					this.SendPropertyChanged("Дата");
					this.OnДатаChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Клиент", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string Клиент
		{
			get
			{
				return this._Клиент;
			}
			set
			{
				if ((this._Клиент != value))
				{
					this.OnКлиентChanging(value);
					this.SendPropertyChanging();
					this._Клиент = value;
					this.SendPropertyChanged("Клиент");
					this.OnКлиентChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Телефон", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string Телефон
		{
			get
			{
				return this._Телефон;
			}
			set
			{
				if ((this._Телефон != value))
				{
					this.OnТелефонChanging(value);
					this.SendPropertyChanging();
					this._Телефон = value;
					this.SendPropertyChanged("Телефон");
					this.OnТелефонChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Установщик", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string Установщик
		{
			get
			{
				return this._Установщик;
			}
			set
			{
				if ((this._Установщик != value))
				{
					this.OnУстановщикChanging(value);
					this.SendPropertyChanging();
					this._Установщик = value;
					this.SendPropertyChanged("Установщик");
					this.OnУстановщикChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Сумма", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string Сумма
		{
			get
			{
				return this._Сумма;
			}
			set
			{
				if ((this._Сумма != value))
				{
					this.OnСуммаChanging(value);
					this.SendPropertyChanging();
					this._Сумма = value;
					this.SendPropertyChanged("Сумма");
					this.OnСуммаChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Предоплата", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string Предоплата
		{
			get
			{
				return this._Предоплата;
			}
			set
			{
				if ((this._Предоплата != value))
				{
					this.OnПредоплатаChanging(value);
					this.SendPropertyChanging();
					this._Предоплата = value;
					this.SendPropertyChanged("Предоплата");
					this.OnПредоплатаChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Срок исполнения]", Storage="_Срок_исполнения", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string Срок_исполнения
		{
			get
			{
				return this._Срок_исполнения;
			}
			set
			{
				if ((this._Срок_исполнения != value))
				{
					this.OnСрок_исполненияChanging(value);
					this.SendPropertyChanging();
					this._Срок_исполнения = value;
					this.SendPropertyChanged("Срок_исполнения");
					this.OnСрок_исполненияChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Цена", DbType="NVarChar(5) NOT NULL", CanBeNull=false)]
		public string Цена
		{
			get
			{
				return this._Цена;
			}
			set
			{
				if ((this._Цена != value))
				{
					this.OnЦенаChanging(value);
					this.SendPropertyChanging();
					this._Цена = value;
					this.SendPropertyChanged("Цена");
					this.OnЦенаChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Количество", DbType="NVarChar(5) NOT NULL", CanBeNull=false)]
		public string Количество
		{
			get
			{
				return this._Количество;
			}
			set
			{
				if ((this._Количество != value))
				{
					this.OnКоличествоChanging(value);
					this.SendPropertyChanging();
					this._Количество = value;
					this.SendPropertyChanged("Количество");
					this.OnКоличествоChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Скидка", DbType="NVarChar(5) NOT NULL", CanBeNull=false)]
		public string Скидка
		{
			get
			{
				return this._Скидка;
			}
			set
			{
				if ((this._Скидка != value))
				{
					this.OnСкидкаChanging(value);
					this.SendPropertyChanging();
					this._Скидка = value;
					this.SendPropertyChanged("Скидка");
					this.OnСкидкаChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Активен", DbType="Bit NOT NULL")]
		public bool Активен
		{
			get
			{
				return this._Активен;
			}
			set
			{
				if ((this._Активен != value))
				{
					this.OnАктивенChanging(value);
					this.SendPropertyChanging();
					this._Активен = value;
					this.SendPropertyChanged("Активен");
					this.OnАктивенChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Название магазина]", Storage="_Название_магазина", DbType="NVarChar(10)")]
		public string Название_магазина
		{
			get
			{
				return this._Название_магазина;
			}
			set
			{
				if ((this._Название_магазина != value))
				{
					this.OnНазвание_магазинаChanging(value);
					this.SendPropertyChanging();
					this._Название_магазина = value;
					this.SendPropertyChanged("Название_магазина");
					this.OnНазвание_магазинаChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Телефон магазина]", Storage="_Телефон_магазина", DbType="NVarChar(10)")]
		public string Телефон_магазина
		{
			get
			{
				return this._Телефон_магазина;
			}
			set
			{
				if ((this._Телефон_магазина != value))
				{
					this.OnТелефон_магазинаChanging(value);
					this.SendPropertyChanging();
					this._Телефон_магазина = value;
					this.SendPropertyChanged("Телефон_магазина");
					this.OnТелефон_магазинаChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Дополнительно", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string Дополнительно
		{
			get
			{
				return this._Дополнительно;
			}
			set
			{
				if ((this._Дополнительно != value))
				{
					this.OnДополнительноChanging(value);
					this.SendPropertyChanging();
					this._Дополнительно = value;
					this.SendPropertyChanged("Дополнительно");
					this.OnДополнительноChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Реквизиты", DbType="NVarChar(10) NULL", CanBeNull=false)]
		public string Реквизиты
		{
			get
			{
				return this._Реквизиты;
			}
			set
			{
				if ((this._Реквизиты != value))
				{
					this.OnРеквизитыChanging(value);
					this.SendPropertyChanging();
					this._Реквизиты = value;
					this.SendPropertyChanged("Реквизиты");
					this.OnРеквизитыChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Жалюзи_бланки_Жалюзи_бланки_структура", Storage="_Жалюзи_бланки_структураs", ThisKey="Код", OtherKey="Код_бланка")]
		public EntitySet<Жалюзи_бланки_структура> Жалюзи_бланки_структураs
		{
			get
			{
				return this._Жалюзи_бланки_структураs;
			}
			set
			{
				this._Жалюзи_бланки_структураs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Жалюзи_бланки_структураs(Жалюзи_бланки_структура entity)
		{
			this.SendPropertyChanging();
			entity.Жалюзи_бланки = this;
		}
		
		private void detach_Жалюзи_бланки_структураs(Жалюзи_бланки_структура entity)
		{
			this.SendPropertyChanging();
			entity.Жалюзи_бланки = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Жалюзи_бланки_структура")]
	public partial class Жалюзи_бланки_структура : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Код;
		
		private int _Код_бланка;
		
		private bool _Краткий_обзор;
		
		private int _Номер;
		
		private string _Поле;
		
		private int _Код_типа_данных;
		
		private string _Надпись;
		
		private string _Ячейка;
		
		private string _Формат;
		
		private int _Код_выравнивания;
		
		private int _Целое;
		
		private double _Дробное;
		
		private string _Текстовое;
		
		private System.Nullable<int> _Код_справочника;
		
		private System.Nullable<int> _Справочник;
		
		private int _Ширина;
		
		private bool _Только_чтение;
		
		private bool _Невидим;
		
		private EntitySet<Жалюзи_заказы_позиции_структура> _Жалюзи_заказы_позиции_структураs;
		
		private EntitySet<Жалюзи_бланки_вывод> _Жалюзи_бланки_выводs;
		
		private EntityRef<Жалюзи_бланки> _Жалюзи_бланки;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnКодChanging(int value);
    partial void OnКодChanged();
    partial void OnКод_бланкаChanging(int value);
    partial void OnКод_бланкаChanged();
    partial void OnКраткий_обзорChanging(bool value);
    partial void OnКраткий_обзорChanged();
    partial void OnНомерChanging(int value);
    partial void OnНомерChanged();
    partial void OnПолеChanging(string value);
    partial void OnПолеChanged();
    partial void OnКод_типа_данныхChanging(int value);
    partial void OnКод_типа_данныхChanged();
    partial void OnНадписьChanging(string value);
    partial void OnНадписьChanged();
    partial void OnЯчейкаChanging(string value);
    partial void OnЯчейкаChanged();
    partial void OnФорматChanging(string value);
    partial void OnФорматChanged();
    partial void OnКод_выравниванияChanging(int value);
    partial void OnКод_выравниванияChanged();
    partial void OnЦелоеChanging(int value);
    partial void OnЦелоеChanged();
    partial void OnДробноеChanging(double value);
    partial void OnДробноеChanged();
    partial void OnТекстовоеChanging(string value);
    partial void OnТекстовоеChanged();
    partial void OnКод_справочникаChanging(System.Nullable<int> value);
    partial void OnКод_справочникаChanged();
    partial void OnСправочникChanging(System.Nullable<int> value);
    partial void OnСправочникChanged();
    partial void OnШиринаChanging(int value);
    partial void OnШиринаChanged();
    partial void OnТолько_чтениеChanging(bool value);
    partial void OnТолько_чтениеChanged();
    partial void OnНевидимChanging(bool value);
    partial void OnНевидимChanged();
    #endregion
		
		public Жалюзи_бланки_структура()
		{
			this._Жалюзи_заказы_позиции_структураs = new EntitySet<Жалюзи_заказы_позиции_структура>(new Action<Жалюзи_заказы_позиции_структура>(this.attach_Жалюзи_заказы_позиции_структураs), new Action<Жалюзи_заказы_позиции_структура>(this.detach_Жалюзи_заказы_позиции_структураs));
			this._Жалюзи_бланки_выводs = new EntitySet<Жалюзи_бланки_вывод>(new Action<Жалюзи_бланки_вывод>(this.attach_Жалюзи_бланки_выводs), new Action<Жалюзи_бланки_вывод>(this.detach_Жалюзи_бланки_выводs));
			this._Жалюзи_бланки = default(EntityRef<Жалюзи_бланки>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Код", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Код
		{
			get
			{
				return this._Код;
			}
			set
			{
				if ((this._Код != value))
				{
					this.OnКодChanging(value);
					this.SendPropertyChanging();
					this._Код = value;
					this.SendPropertyChanged("Код");
					this.OnКодChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Код бланка]", Storage="_Код_бланка", DbType="Int NOT NULL")]
		public int Код_бланка
		{
			get
			{
				return this._Код_бланка;
			}
			set
			{
				if ((this._Код_бланка != value))
				{
					this.OnКод_бланкаChanging(value);
					this.SendPropertyChanging();
					this._Код_бланка = value;
					this.SendPropertyChanged("Код_бланка");
					this.OnКод_бланкаChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Краткий обзор]", Storage="_Краткий_обзор", DbType="Bit NOT NULL")]
		public bool Краткий_обзор
		{
			get
			{
				return this._Краткий_обзор;
			}
			set
			{
				if ((this._Краткий_обзор != value))
				{
					this.OnКраткий_обзорChanging(value);
					this.SendPropertyChanging();
					this._Краткий_обзор = value;
					this.SendPropertyChanged("Краткий_обзор");
					this.OnКраткий_обзорChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Номер", DbType="Int NOT NULL")]
		public int Номер
		{
			get
			{
				return this._Номер;
			}
			set
			{
				if ((this._Номер != value))
				{
					this.OnНомерChanging(value);
					this.SendPropertyChanging();
					this._Номер = value;
					this.SendPropertyChanged("Номер");
					this.OnНомерChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Поле", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string Поле
		{
			get
			{
				return this._Поле;
			}
			set
			{
				if ((this._Поле != value))
				{
					this.OnПолеChanging(value);
					this.SendPropertyChanging();
					this._Поле = value;
					this.SendPropertyChanged("Поле");
					this.OnПолеChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Код типа данных]", Storage="_Код_типа_данных", DbType="Int NOT NULL")]
		public int Код_типа_данных
		{
			get
			{
				return this._Код_типа_данных;
			}
			set
			{
				if ((this._Код_типа_данных != value))
				{
					this.OnКод_типа_данныхChanging(value);
					this.SendPropertyChanging();
					this._Код_типа_данных = value;
					this.SendPropertyChanged("Код_типа_данных");
					this.OnКод_типа_данныхChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Надпись", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string Надпись
		{
			get
			{
				return this._Надпись;
			}
			set
			{
				if ((this._Надпись != value))
				{
					this.OnНадписьChanging(value);
					this.SendPropertyChanging();
					this._Надпись = value;
					this.SendPropertyChanged("Надпись");
					this.OnНадписьChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ячейка", DbType="NVarChar(5) NOT NULL", CanBeNull=false)]
		public string Ячейка
		{
			get
			{
				return this._Ячейка;
			}
			set
			{
				if ((this._Ячейка != value))
				{
					this.OnЯчейкаChanging(value);
					this.SendPropertyChanging();
					this._Ячейка = value;
					this.SendPropertyChanged("Ячейка");
					this.OnЯчейкаChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Формат", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string Формат
		{
			get
			{
				return this._Формат;
			}
			set
			{
				if ((this._Формат != value))
				{
					this.OnФорматChanging(value);
					this.SendPropertyChanging();
					this._Формат = value;
					this.SendPropertyChanged("Формат");
					this.OnФорматChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Код выравнивания]", Storage="_Код_выравнивания", DbType="Int NOT NULL")]
		public int Код_выравнивания
		{
			get
			{
				return this._Код_выравнивания;
			}
			set
			{
				if ((this._Код_выравнивания != value))
				{
					this.OnКод_выравниванияChanging(value);
					this.SendPropertyChanging();
					this._Код_выравнивания = value;
					this.SendPropertyChanged("Код_выравнивания");
					this.OnКод_выравниванияChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Целое", DbType="Int NOT NULL")]
		public int Целое
		{
			get
			{
				return this._Целое;
			}
			set
			{
				if ((this._Целое != value))
				{
					this.OnЦелоеChanging(value);
					this.SendPropertyChanging();
					this._Целое = value;
					this.SendPropertyChanged("Целое");
					this.OnЦелоеChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Дробное", DbType="Float NOT NULL")]
		public double Дробное
		{
			get
			{
				return this._Дробное;
			}
			set
			{
				if ((this._Дробное != value))
				{
					this.OnДробноеChanging(value);
					this.SendPropertyChanging();
					this._Дробное = value;
					this.SendPropertyChanged("Дробное");
					this.OnДробноеChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Текстовое", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string Текстовое
		{
			get
			{
				return this._Текстовое;
			}
			set
			{
				if ((this._Текстовое != value))
				{
					this.OnТекстовоеChanging(value);
					this.SendPropertyChanging();
					this._Текстовое = value;
					this.SendPropertyChanged("Текстовое");
					this.OnТекстовоеChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Код справочника]", Storage="_Код_справочника", DbType="Int")]
		public System.Nullable<int> Код_справочника
		{
			get
			{
				return this._Код_справочника;
			}
			set
			{
				if ((this._Код_справочника != value))
				{
					this.OnКод_справочникаChanging(value);
					this.SendPropertyChanging();
					this._Код_справочника = value;
					this.SendPropertyChanged("Код_справочника");
					this.OnКод_справочникаChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Справочник", DbType="Int")]
		public System.Nullable<int> Справочник
		{
			get
			{
				return this._Справочник;
			}
			set
			{
				if ((this._Справочник != value))
				{
					this.OnСправочникChanging(value);
					this.SendPropertyChanging();
					this._Справочник = value;
					this.SendPropertyChanged("Справочник");
					this.OnСправочникChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ширина", DbType="Int NOT NULL")]
		public int Ширина
		{
			get
			{
				return this._Ширина;
			}
			set
			{
				if ((this._Ширина != value))
				{
					this.OnШиринаChanging(value);
					this.SendPropertyChanging();
					this._Ширина = value;
					this.SendPropertyChanged("Ширина");
					this.OnШиринаChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Только чтение]", Storage="_Только_чтение", DbType="Bit NOT NULL")]
		public bool Только_чтение
		{
			get
			{
				return this._Только_чтение;
			}
			set
			{
				if ((this._Только_чтение != value))
				{
					this.OnТолько_чтениеChanging(value);
					this.SendPropertyChanging();
					this._Только_чтение = value;
					this.SendPropertyChanged("Только_чтение");
					this.OnТолько_чтениеChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Невидим", DbType="Bit NOT NULL")]
		public bool Невидим
		{
			get
			{
				return this._Невидим;
			}
			set
			{
				if ((this._Невидим != value))
				{
					this.OnНевидимChanging(value);
					this.SendPropertyChanging();
					this._Невидим = value;
					this.SendPropertyChanged("Невидим");
					this.OnНевидимChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Жалюзи_бланки_структура_Жалюзи_заказы_позиции_структура", Storage="_Жалюзи_заказы_позиции_структураs", ThisKey="Код", OtherKey="Код_структуры")]
		public EntitySet<Жалюзи_заказы_позиции_структура> Жалюзи_заказы_позиции_структураs
		{
			get
			{
				return this._Жалюзи_заказы_позиции_структураs;
			}
			set
			{
				this._Жалюзи_заказы_позиции_структураs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Жалюзи_бланки_структура_Жалюзи_бланки_вывод", Storage="_Жалюзи_бланки_выводs", ThisKey="Код", OtherKey="Код_структуры")]
		public EntitySet<Жалюзи_бланки_вывод> Жалюзи_бланки_выводs
		{
			get
			{
				return this._Жалюзи_бланки_выводs;
			}
			set
			{
				this._Жалюзи_бланки_выводs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Жалюзи_бланки_Жалюзи_бланки_структура", Storage="_Жалюзи_бланки", ThisKey="Код_бланка", OtherKey="Код", IsForeignKey=true)]
		public Жалюзи_бланки Жалюзи_бланки
		{
			get
			{
				return this._Жалюзи_бланки.Entity;
			}
			set
			{
				Жалюзи_бланки previousValue = this._Жалюзи_бланки.Entity;
				if (((previousValue != value) 
							|| (this._Жалюзи_бланки.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Жалюзи_бланки.Entity = null;
						previousValue.Жалюзи_бланки_структураs.Remove(this);
					}
					this._Жалюзи_бланки.Entity = value;
					if ((value != null))
					{
						value.Жалюзи_бланки_структураs.Add(this);
						this._Код_бланка = value.Код;
					}
					else
					{
						this._Код_бланка = default(int);
					}
					this.SendPropertyChanged("Жалюзи_бланки");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Жалюзи_заказы_позиции_структураs(Жалюзи_заказы_позиции_структура entity)
		{
			this.SendPropertyChanging();
			entity.Жалюзи_бланки_структура = this;
		}
		
		private void detach_Жалюзи_заказы_позиции_структураs(Жалюзи_заказы_позиции_структура entity)
		{
			this.SendPropertyChanging();
			entity.Жалюзи_бланки_структура = null;
		}
		
		private void attach_Жалюзи_бланки_выводs(Жалюзи_бланки_вывод entity)
		{
			this.SendPropertyChanging();
			entity.Жалюзи_бланки_структура = this;
		}
		
		private void detach_Жалюзи_бланки_выводs(Жалюзи_бланки_вывод entity)
		{
			this.SendPropertyChanging();
			entity.Жалюзи_бланки_структура = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Жалюзи_заказы_позиции")]
	public partial class Жалюзи_заказы_позиции : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Код;
		
		private int _Код_заказа;
		
		private System.Nullable<double> _Количество;
		
		private double _Цена;
		
		private double _Скидка;
		
		private System.Nullable<System.DateTime> _Дата_отправки;
		
		private System.Nullable<System.DateTime> _Дата_получения;
		
		private System.Nullable<int> _Код_информации;
		
		private bool _Передан;
		
		private System.Nullable<System.DateTime> _Дата_передачи;
		
		private bool _Заказано;
		
		private System.Nullable<double> _Себестоимость;
		
		private bool _Готово;
		
		private System.Nullable<int> _Код_исполнителя;
		
		private EntitySet<Жалюзи_заказы_позиции_структура> _Жалюзи_заказы_позиции_структураs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnКодChanging(int value);
    partial void OnКодChanged();
    partial void OnКод_заказаChanging(int value);
    partial void OnКод_заказаChanged();
    partial void OnКоличествоChanging(System.Nullable<double> value);
    partial void OnКоличествоChanged();
    partial void OnЦенаChanging(double value);
    partial void OnЦенаChanged();
    partial void OnСкидкаChanging(double value);
    partial void OnСкидкаChanged();
    partial void OnДата_отправкиChanging(System.Nullable<System.DateTime> value);
    partial void OnДата_отправкиChanged();
    partial void OnДата_полученияChanging(System.Nullable<System.DateTime> value);
    partial void OnДата_полученияChanged();
    partial void OnКод_информацииChanging(System.Nullable<int> value);
    partial void OnКод_информацииChanged();
    partial void OnПереданChanging(bool value);
    partial void OnПереданChanged();
    partial void OnДата_передачиChanging(System.Nullable<System.DateTime> value);
    partial void OnДата_передачиChanged();
    partial void OnЗаказаноChanging(bool value);
    partial void OnЗаказаноChanged();
    partial void OnСебестоимостьChanging(System.Nullable<double> value);
    partial void OnСебестоимостьChanged();
    partial void OnГотовоChanging(bool value);
    partial void OnГотовоChanged();
    partial void OnКод_исполнителяChanging(System.Nullable<int> value);
    partial void OnКод_исполнителяChanged();
    #endregion
		
		public Жалюзи_заказы_позиции()
		{
			this._Жалюзи_заказы_позиции_структураs = new EntitySet<Жалюзи_заказы_позиции_структура>(new Action<Жалюзи_заказы_позиции_структура>(this.attach_Жалюзи_заказы_позиции_структураs), new Action<Жалюзи_заказы_позиции_структура>(this.detach_Жалюзи_заказы_позиции_структураs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Код", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Код
		{
			get
			{
				return this._Код;
			}
			set
			{
				if ((this._Код != value))
				{
					this.OnКодChanging(value);
					this.SendPropertyChanging();
					this._Код = value;
					this.SendPropertyChanged("Код");
					this.OnКодChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Код заказа]", Storage="_Код_заказа", DbType="Int NOT NULL")]
		public int Код_заказа
		{
			get
			{
				return this._Код_заказа;
			}
			set
			{
				if ((this._Код_заказа != value))
				{
					this.OnКод_заказаChanging(value);
					this.SendPropertyChanging();
					this._Код_заказа = value;
					this.SendPropertyChanged("Код_заказа");
					this.OnКод_заказаChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Количество", DbType="Float")]
		public System.Nullable<double> Количество
		{
			get
			{
				return this._Количество;
			}
			set
			{
				if ((this._Количество != value))
				{
					this.OnКоличествоChanging(value);
					this.SendPropertyChanging();
					this._Количество = value;
					this.SendPropertyChanged("Количество");
					this.OnКоличествоChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Цена", DbType="Float NOT NULL")]
		public double Цена
		{
			get
			{
				return this._Цена;
			}
			set
			{
				if ((this._Цена != value))
				{
					this.OnЦенаChanging(value);
					this.SendPropertyChanging();
					this._Цена = value;
					this.SendPropertyChanged("Цена");
					this.OnЦенаChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Скидка", DbType="Float NOT NULL")]
		public double Скидка
		{
			get
			{
				return this._Скидка;
			}
			set
			{
				if ((this._Скидка != value))
				{
					this.OnСкидкаChanging(value);
					this.SendPropertyChanging();
					this._Скидка = value;
					this.SendPropertyChanged("Скидка");
					this.OnСкидкаChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Дата отправки]", Storage="_Дата_отправки", DbType="DateTime")]
		public System.Nullable<System.DateTime> Дата_отправки
		{
			get
			{
				return this._Дата_отправки;
			}
			set
			{
				if ((this._Дата_отправки != value))
				{
					this.OnДата_отправкиChanging(value);
					this.SendPropertyChanging();
					this._Дата_отправки = value;
					this.SendPropertyChanged("Дата_отправки");
					this.OnДата_отправкиChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Дата получения]", Storage="_Дата_получения", DbType="DateTime")]
		public System.Nullable<System.DateTime> Дата_получения
		{
			get
			{
				return this._Дата_получения;
			}
			set
			{
				if ((this._Дата_получения != value))
				{
					this.OnДата_полученияChanging(value);
					this.SendPropertyChanging();
					this._Дата_получения = value;
					this.SendPropertyChanged("Дата_получения");
					this.OnДата_полученияChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Код информации]", Storage="_Код_информации", DbType="Int")]
		public System.Nullable<int> Код_информации
		{
			get
			{
				return this._Код_информации;
			}
			set
			{
				if ((this._Код_информации != value))
				{
					this.OnКод_информацииChanging(value);
					this.SendPropertyChanging();
					this._Код_информации = value;
					this.SendPropertyChanged("Код_информации");
					this.OnКод_информацииChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Передан", DbType="Bit NOT NULL")]
		public bool Передан
		{
			get
			{
				return this._Передан;
			}
			set
			{
				if ((this._Передан != value))
				{
					this.OnПереданChanging(value);
					this.SendPropertyChanging();
					this._Передан = value;
					this.SendPropertyChanged("Передан");
					this.OnПереданChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Дата передачи]", Storage="_Дата_передачи", DbType="DateTime")]
		public System.Nullable<System.DateTime> Дата_передачи
		{
			get
			{
				return this._Дата_передачи;
			}
			set
			{
				if ((this._Дата_передачи != value))
				{
					this.OnДата_передачиChanging(value);
					this.SendPropertyChanging();
					this._Дата_передачи = value;
					this.SendPropertyChanged("Дата_передачи");
					this.OnДата_передачиChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Заказано", DbType="Bit NOT NULL")]
		public bool Заказано
		{
			get
			{
				return this._Заказано;
			}
			set
			{
				if ((this._Заказано != value))
				{
					this.OnЗаказаноChanging(value);
					this.SendPropertyChanging();
					this._Заказано = value;
					this.SendPropertyChanged("Заказано");
					this.OnЗаказаноChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Себестоимость", DbType="Float")]
		public System.Nullable<double> Себестоимость
		{
			get
			{
				return this._Себестоимость;
			}
			set
			{
				if ((this._Себестоимость != value))
				{
					this.OnСебестоимостьChanging(value);
					this.SendPropertyChanging();
					this._Себестоимость = value;
					this.SendPropertyChanged("Себестоимость");
					this.OnСебестоимостьChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Готово", DbType="Bit NOT NULL")]
		public bool Готово
		{
			get
			{
				return this._Готово;
			}
			set
			{
				if ((this._Готово != value))
				{
					this.OnГотовоChanging(value);
					this.SendPropertyChanging();
					this._Готово = value;
					this.SendPropertyChanged("Готово");
					this.OnГотовоChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Код исполнителя]", Storage="_Код_исполнителя", DbType="Int")]
		public System.Nullable<int> Код_исполнителя
		{
			get
			{
				return this._Код_исполнителя;
			}
			set
			{
				if ((this._Код_исполнителя != value))
				{
					this.OnКод_исполнителяChanging(value);
					this.SendPropertyChanging();
					this._Код_исполнителя = value;
					this.SendPropertyChanged("Код_исполнителя");
					this.OnКод_исполнителяChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Жалюзи_заказы_позиции_Жалюзи_заказы_позиции_структура", Storage="_Жалюзи_заказы_позиции_структураs", ThisKey="Код", OtherKey="Код_позиции")]
		public EntitySet<Жалюзи_заказы_позиции_структура> Жалюзи_заказы_позиции_структураs
		{
			get
			{
				return this._Жалюзи_заказы_позиции_структураs;
			}
			set
			{
				this._Жалюзи_заказы_позиции_структураs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Жалюзи_заказы_позиции_структураs(Жалюзи_заказы_позиции_структура entity)
		{
			this.SendPropertyChanging();
			entity.Жалюзи_заказы_позиции = this;
		}
		
		private void detach_Жалюзи_заказы_позиции_структураs(Жалюзи_заказы_позиции_структура entity)
		{
			this.SendPropertyChanging();
			entity.Жалюзи_заказы_позиции = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Жалюзи_заказы_позиции_структура")]
	public partial class Жалюзи_заказы_позиции_структура : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Код;
		
		private int _Код_позиции;
		
		private int _Код_структуры;
		
		private int _Целое;
		
		private double _Дробное;
		
		private string _Текстовое;
		
		private System.Nullable<int> _Справочник;
		
		private EntityRef<Жалюзи_бланки_структура> _Жалюзи_бланки_структура;
		
		private EntityRef<Жалюзи_заказы_позиции> _Жалюзи_заказы_позиции;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnКодChanging(int value);
    partial void OnКодChanged();
    partial void OnКод_позицииChanging(int value);
    partial void OnКод_позицииChanged();
    partial void OnКод_структурыChanging(int value);
    partial void OnКод_структурыChanged();
    partial void OnЦелоеChanging(int value);
    partial void OnЦелоеChanged();
    partial void OnДробноеChanging(double value);
    partial void OnДробноеChanged();
    partial void OnТекстовоеChanging(string value);
    partial void OnТекстовоеChanged();
    partial void OnСправочникChanging(System.Nullable<int> value);
    partial void OnСправочникChanged();
    #endregion
		
		public Жалюзи_заказы_позиции_структура()
		{
			this._Жалюзи_бланки_структура = default(EntityRef<Жалюзи_бланки_структура>);
			this._Жалюзи_заказы_позиции = default(EntityRef<Жалюзи_заказы_позиции>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Код", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Код
		{
			get
			{
				return this._Код;
			}
			set
			{
				if ((this._Код != value))
				{
					this.OnКодChanging(value);
					this.SendPropertyChanging();
					this._Код = value;
					this.SendPropertyChanged("Код");
					this.OnКодChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Код позиции]", Storage="_Код_позиции", DbType="Int NOT NULL")]
		public int Код_позиции
		{
			get
			{
				return this._Код_позиции;
			}
			set
			{
				if ((this._Код_позиции != value))
				{
					this.OnКод_позицииChanging(value);
					this.SendPropertyChanging();
					this._Код_позиции = value;
					this.SendPropertyChanged("Код_позиции");
					this.OnКод_позицииChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Код структуры]", Storage="_Код_структуры", DbType="Int NOT NULL")]
		public int Код_структуры
		{
			get
			{
				return this._Код_структуры;
			}
			set
			{
				if ((this._Код_структуры != value))
				{
					this.OnКод_структурыChanging(value);
					this.SendPropertyChanging();
					this._Код_структуры = value;
					this.SendPropertyChanged("Код_структуры");
					this.OnКод_структурыChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Целое", DbType="Int NOT NULL")]
		public int Целое
		{
			get
			{
				return this._Целое;
			}
			set
			{
				if ((this._Целое != value))
				{
					this.OnЦелоеChanging(value);
					this.SendPropertyChanging();
					this._Целое = value;
					this.SendPropertyChanged("Целое");
					this.OnЦелоеChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Дробное", DbType="Float NOT NULL")]
		public double Дробное
		{
			get
			{
				return this._Дробное;
			}
			set
			{
				if ((this._Дробное != value))
				{
					this.OnДробноеChanging(value);
					this.SendPropertyChanging();
					this._Дробное = value;
					this.SendPropertyChanged("Дробное");
					this.OnДробноеChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Текстовое", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string Текстовое
		{
			get
			{
				return this._Текстовое;
			}
			set
			{
				if ((this._Текстовое != value))
				{
					this.OnТекстовоеChanging(value);
					this.SendPropertyChanging();
					this._Текстовое = value;
					this.SendPropertyChanged("Текстовое");
					this.OnТекстовоеChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Справочник", DbType="Int")]
		public System.Nullable<int> Справочник
		{
			get
			{
				return this._Справочник;
			}
			set
			{
				if ((this._Справочник != value))
				{
					this.OnСправочникChanging(value);
					this.SendPropertyChanging();
					this._Справочник = value;
					this.SendPropertyChanged("Справочник");
					this.OnСправочникChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Жалюзи_бланки_структура_Жалюзи_заказы_позиции_структура", Storage="_Жалюзи_бланки_структура", ThisKey="Код_структуры", OtherKey="Код", IsForeignKey=true)]
		public Жалюзи_бланки_структура Жалюзи_бланки_структура
		{
			get
			{
				return this._Жалюзи_бланки_структура.Entity;
			}
			set
			{
				Жалюзи_бланки_структура previousValue = this._Жалюзи_бланки_структура.Entity;
				if (((previousValue != value) 
							|| (this._Жалюзи_бланки_структура.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Жалюзи_бланки_структура.Entity = null;
						previousValue.Жалюзи_заказы_позиции_структураs.Remove(this);
					}
					this._Жалюзи_бланки_структура.Entity = value;
					if ((value != null))
					{
						value.Жалюзи_заказы_позиции_структураs.Add(this);
						this._Код_структуры = value.Код;
					}
					else
					{
						this._Код_структуры = default(int);
					}
					this.SendPropertyChanged("Жалюзи_бланки_структура");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Жалюзи_заказы_позиции_Жалюзи_заказы_позиции_структура", Storage="_Жалюзи_заказы_позиции", ThisKey="Код_позиции", OtherKey="Код", IsForeignKey=true)]
		public Жалюзи_заказы_позиции Жалюзи_заказы_позиции
		{
			get
			{
				return this._Жалюзи_заказы_позиции.Entity;
			}
			set
			{
				Жалюзи_заказы_позиции previousValue = this._Жалюзи_заказы_позиции.Entity;
				if (((previousValue != value) 
							|| (this._Жалюзи_заказы_позиции.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Жалюзи_заказы_позиции.Entity = null;
						previousValue.Жалюзи_заказы_позиции_структураs.Remove(this);
					}
					this._Жалюзи_заказы_позиции.Entity = value;
					if ((value != null))
					{
						value.Жалюзи_заказы_позиции_структураs.Add(this);
						this._Код_позиции = value.Код;
					}
					else
					{
						this._Код_позиции = default(int);
					}
					this.SendPropertyChanged("Жалюзи_заказы_позиции");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Жалюзи_все_справочники")]
	public partial class Жалюзи_все_справочники
	{
		
		private int _Код;
		
		private string _Название;
		
		private string _Описание;
		
		private int _Код_типа_данных;
		
		private System.Nullable<bool> _Внешний;
		
		public Жалюзи_все_справочники()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Код", DbType="Int NOT NULL")]
		public int Код
		{
			get
			{
				return this._Код;
			}
			set
			{
				if ((this._Код != value))
				{
					this._Код = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Название", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Название
		{
			get
			{
				return this._Название;
			}
			set
			{
				if ((this._Название != value))
				{
					this._Название = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Описание", DbType="NVarChar(200)")]
		public string Описание
		{
			get
			{
				return this._Описание;
			}
			set
			{
				if ((this._Описание != value))
				{
					this._Описание = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Код типа данных]", Storage="_Код_типа_данных", DbType="Int NOT NULL")]
		public int Код_типа_данных
		{
			get
			{
				return this._Код_типа_данных;
			}
			set
			{
				if ((this._Код_типа_данных != value))
				{
					this._Код_типа_данных = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Внешний", DbType="Bit")]
		public System.Nullable<bool> Внешний
		{
			get
			{
				return this._Внешний;
			}
			set
			{
				if ((this._Внешний != value))
				{
					this._Внешний = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Жалюзи_все_справочники_содержание")]
	public partial class Жалюзи_все_справочники_содержание
	{
		
		private int _Код;
		
		private int _Код_справочника;
		
		private bool _Активен;
		
		private int _Целое;
		
		private double _Дробное;
		
		private string _Текстовое;
		
		private System.Nullable<bool> _Внешний;
		
		public Жалюзи_все_справочники_содержание()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Код", DbType="Int NOT NULL")]
		public int Код
		{
			get
			{
				return this._Код;
			}
			set
			{
				if ((this._Код != value))
				{
					this._Код = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Код справочника]", Storage="_Код_справочника", DbType="Int NOT NULL")]
		public int Код_справочника
		{
			get
			{
				return this._Код_справочника;
			}
			set
			{
				if ((this._Код_справочника != value))
				{
					this._Код_справочника = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Активен", DbType="Bit NOT NULL")]
		public bool Активен
		{
			get
			{
				return this._Активен;
			}
			set
			{
				if ((this._Активен != value))
				{
					this._Активен = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Целое", DbType="Int NOT NULL")]
		public int Целое
		{
			get
			{
				return this._Целое;
			}
			set
			{
				if ((this._Целое != value))
				{
					this._Целое = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Дробное", DbType="Float NOT NULL")]
		public double Дробное
		{
			get
			{
				return this._Дробное;
			}
			set
			{
				if ((this._Дробное != value))
				{
					this._Дробное = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Текстовое", DbType="NVarChar(150)")]
		public string Текстовое
		{
			get
			{
				return this._Текстовое;
			}
			set
			{
				if ((this._Текстовое != value))
				{
					this._Текстовое = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Внешний", DbType="Bit")]
		public System.Nullable<bool> Внешний
		{
			get
			{
				return this._Внешний;
			}
			set
			{
				if ((this._Внешний != value))
				{
					this._Внешний = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Жалюзи_бланки_вывод")]
	public partial class Жалюзи_бланки_вывод : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Код;
		
		private string _Значение;
		
		private string _Замена;
		
		private int _Код_структуры;
		
		private EntityRef<Жалюзи_бланки_структура> _Жалюзи_бланки_структура;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnКодChanging(int value);
    partial void OnКодChanged();
    partial void OnЗначениеChanging(string value);
    partial void OnЗначениеChanged();
    partial void OnЗаменаChanging(string value);
    partial void OnЗаменаChanged();
    partial void OnКод_структурыChanging(int value);
    partial void OnКод_структурыChanged();
    #endregion
		
		public Жалюзи_бланки_вывод()
		{
			this._Жалюзи_бланки_структура = default(EntityRef<Жалюзи_бланки_структура>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Код", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Код
		{
			get
			{
				return this._Код;
			}
			set
			{
				if ((this._Код != value))
				{
					this.OnКодChanging(value);
					this.SendPropertyChanging();
					this._Код = value;
					this.SendPropertyChanged("Код");
					this.OnКодChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Значение", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string Значение
		{
			get
			{
				return this._Значение;
			}
			set
			{
				if ((this._Значение != value))
				{
					this.OnЗначениеChanging(value);
					this.SendPropertyChanging();
					this._Значение = value;
					this.SendPropertyChanged("Значение");
					this.OnЗначениеChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Замена", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string Замена
		{
			get
			{
				return this._Замена;
			}
			set
			{
				if ((this._Замена != value))
				{
					this.OnЗаменаChanging(value);
					this.SendPropertyChanging();
					this._Замена = value;
					this.SendPropertyChanged("Замена");
					this.OnЗаменаChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Код структуры]", Storage="_Код_структуры", DbType="Int NOT NULL")]
		public int Код_структуры
		{
			get
			{
				return this._Код_структуры;
			}
			set
			{
				if ((this._Код_структуры != value))
				{
					this.OnКод_структурыChanging(value);
					this.SendPropertyChanging();
					this._Код_структуры = value;
					this.SendPropertyChanged("Код_структуры");
					this.OnКод_структурыChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Жалюзи_бланки_структура_Жалюзи_бланки_вывод", Storage="_Жалюзи_бланки_структура", ThisKey="Код_структуры", OtherKey="Код", IsForeignKey=true)]
		public Жалюзи_бланки_структура Жалюзи_бланки_структура
		{
			get
			{
				return this._Жалюзи_бланки_структура.Entity;
			}
			set
			{
				Жалюзи_бланки_структура previousValue = this._Жалюзи_бланки_структура.Entity;
				if (((previousValue != value) 
							|| (this._Жалюзи_бланки_структура.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Жалюзи_бланки_структура.Entity = null;
						previousValue.Жалюзи_бланки_выводs.Remove(this);
					}
					this._Жалюзи_бланки_структура.Entity = value;
					if ((value != null))
					{
						value.Жалюзи_бланки_выводs.Add(this);
						this._Код_структуры = value.Код;
					}
					else
					{
						this._Код_структуры = default(int);
					}
					this.SendPropertyChanged("Жалюзи_бланки_структура");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	public partial class Отчеты_жалюзи_заголовокResult
	{
		
		private int _Код;
		
		private System.DateTime _Дата;
		
		private int _Срок_выполнения;
		
		private string _Дополнительно;
		
		private bool _Безнал;
		
		private string _ФИО;
		
		private string _Телефон;
		
		private string _Установщик;
		
		private int _Код_бланка;
		
		private System.Nullable<System.DateTime> _Дата_готовности;
		
		private int _Статус;
		
		private System.Nullable<double> _Сумма;
		
		private System.Nullable<double> _Предоплата;
		
		private System.Nullable<double> _Остаток;
		
		private int _Первая_позиция;
		
		private string _Предварительный_бланк_ячейка;
		
		private string _Номер_заказа_ячейка;
		
		private string _Дата_ячейка;
		
		private string _Клиент_ячейка;
		
		private string _Телефон_ячейка;
		
		private string _Установщик_ячейка;
		
		private string _Сумма_ячейка;
		
		private string _Предоплата_ячейка;
		
		private string _Срок_исполнения_ячейка;
		
		private string _Количество_столбец;
		
		private string _Скидка_столбец;
		
		private string _Цена_столбец;
		
		private string _Дополнительно_ячейка;
		
		private string _Магазин_ячейка;
		
		private string _Телефон_магазина_ячейка;
		
		private string _Реквизиты_ячейка;
		
		private string _Магазин_название;
		
		private string _Магазин_телефон;
		
		private string _Реквизиты;
		
		public Отчеты_жалюзи_заголовокResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Код", DbType="Int NOT NULL")]
		public int Код
		{
			get
			{
				return this._Код;
			}
			set
			{
				if ((this._Код != value))
				{
					this._Код = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Дата", DbType="DateTime NOT NULL")]
		public System.DateTime Дата
		{
			get
			{
				return this._Дата;
			}
			set
			{
				if ((this._Дата != value))
				{
					this._Дата = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Срок выполнения]", Storage="_Срок_выполнения", DbType="Int NOT NULL")]
		public int Срок_выполнения
		{
			get
			{
				return this._Срок_выполнения;
			}
			set
			{
				if ((this._Срок_выполнения != value))
				{
					this._Срок_выполнения = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Дополнительно", DbType="NVarChar(500)")]
		public string Дополнительно
		{
			get
			{
				return this._Дополнительно;
			}
			set
			{
				if ((this._Дополнительно != value))
				{
					this._Дополнительно = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Безнал", DbType="Bit NOT NULL")]
		public bool Безнал
		{
			get
			{
				return this._Безнал;
			}
			set
			{
				if ((this._Безнал != value))
				{
					this._Безнал = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ФИО", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string ФИО
		{
			get
			{
				return this._ФИО;
			}
			set
			{
				if ((this._ФИО != value))
				{
					this._ФИО = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Телефон", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string Телефон
		{
			get
			{
				return this._Телефон;
			}
			set
			{
				if ((this._Телефон != value))
				{
					this._Телефон = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Установщик", DbType="VarChar(150)")]
		public string Установщик
		{
			get
			{
				return this._Установщик;
			}
			set
			{
				if ((this._Установщик != value))
				{
					this._Установщик = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Код бланка]", Storage="_Код_бланка", DbType="Int NOT NULL")]
		public int Код_бланка
		{
			get
			{
				return this._Код_бланка;
			}
			set
			{
				if ((this._Код_бланка != value))
				{
					this._Код_бланка = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Дата готовности]", Storage="_Дата_готовности", DbType="DateTime")]
		public System.Nullable<System.DateTime> Дата_готовности
		{
			get
			{
				return this._Дата_готовности;
			}
			set
			{
				if ((this._Дата_готовности != value))
				{
					this._Дата_готовности = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Статус", DbType="Int NOT NULL")]
		public int Статус
		{
			get
			{
				return this._Статус;
			}
			set
			{
				if ((this._Статус != value))
				{
					this._Статус = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Сумма", DbType="Float")]
		public System.Nullable<double> Сумма
		{
			get
			{
				return this._Сумма;
			}
			set
			{
				if ((this._Сумма != value))
				{
					this._Сумма = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Предоплата", DbType="Float")]
		public System.Nullable<double> Предоплата
		{
			get
			{
				return this._Предоплата;
			}
			set
			{
				if ((this._Предоплата != value))
				{
					this._Предоплата = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Остаток", DbType="Float")]
		public System.Nullable<double> Остаток
		{
			get
			{
				return this._Остаток;
			}
			set
			{
				if ((this._Остаток != value))
				{
					this._Остаток = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Первая позиция]", Storage="_Первая_позиция", DbType="Int NOT NULL")]
		public int Первая_позиция
		{
			get
			{
				return this._Первая_позиция;
			}
			set
			{
				if ((this._Первая_позиция != value))
				{
					this._Первая_позиция = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Предварительный бланк ячейка]", Storage="_Предварительный_бланк_ячейка", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string Предварительный_бланк_ячейка
		{
			get
			{
				return this._Предварительный_бланк_ячейка;
			}
			set
			{
				if ((this._Предварительный_бланк_ячейка != value))
				{
					this._Предварительный_бланк_ячейка = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Номер заказа ячейка]", Storage="_Номер_заказа_ячейка", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string Номер_заказа_ячейка
		{
			get
			{
				return this._Номер_заказа_ячейка;
			}
			set
			{
				if ((this._Номер_заказа_ячейка != value))
				{
					this._Номер_заказа_ячейка = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Дата ячейка]", Storage="_Дата_ячейка", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string Дата_ячейка
		{
			get
			{
				return this._Дата_ячейка;
			}
			set
			{
				if ((this._Дата_ячейка != value))
				{
					this._Дата_ячейка = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Клиент ячейка]", Storage="_Клиент_ячейка", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string Клиент_ячейка
		{
			get
			{
				return this._Клиент_ячейка;
			}
			set
			{
				if ((this._Клиент_ячейка != value))
				{
					this._Клиент_ячейка = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Телефон ячейка]", Storage="_Телефон_ячейка", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string Телефон_ячейка
		{
			get
			{
				return this._Телефон_ячейка;
			}
			set
			{
				if ((this._Телефон_ячейка != value))
				{
					this._Телефон_ячейка = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Установщик ячейка]", Storage="_Установщик_ячейка", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string Установщик_ячейка
		{
			get
			{
				return this._Установщик_ячейка;
			}
			set
			{
				if ((this._Установщик_ячейка != value))
				{
					this._Установщик_ячейка = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Сумма ячейка]", Storage="_Сумма_ячейка", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string Сумма_ячейка
		{
			get
			{
				return this._Сумма_ячейка;
			}
			set
			{
				if ((this._Сумма_ячейка != value))
				{
					this._Сумма_ячейка = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Предоплата ячейка]", Storage="_Предоплата_ячейка", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string Предоплата_ячейка
		{
			get
			{
				return this._Предоплата_ячейка;
			}
			set
			{
				if ((this._Предоплата_ячейка != value))
				{
					this._Предоплата_ячейка = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Срок исполнения ячейка]", Storage="_Срок_исполнения_ячейка", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string Срок_исполнения_ячейка
		{
			get
			{
				return this._Срок_исполнения_ячейка;
			}
			set
			{
				if ((this._Срок_исполнения_ячейка != value))
				{
					this._Срок_исполнения_ячейка = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Количество столбец]", Storage="_Количество_столбец", DbType="NVarChar(5) NOT NULL", CanBeNull=false)]
		public string Количество_столбец
		{
			get
			{
				return this._Количество_столбец;
			}
			set
			{
				if ((this._Количество_столбец != value))
				{
					this._Количество_столбец = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Скидка столбец]", Storage="_Скидка_столбец", DbType="NVarChar(5) NOT NULL", CanBeNull=false)]
		public string Скидка_столбец
		{
			get
			{
				return this._Скидка_столбец;
			}
			set
			{
				if ((this._Скидка_столбец != value))
				{
					this._Скидка_столбец = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Цена столбец]", Storage="_Цена_столбец", DbType="NVarChar(5) NOT NULL", CanBeNull=false)]
		public string Цена_столбец
		{
			get
			{
				return this._Цена_столбец;
			}
			set
			{
				if ((this._Цена_столбец != value))
				{
					this._Цена_столбец = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Дополнительно ячейка]", Storage="_Дополнительно_ячейка", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string Дополнительно_ячейка
		{
			get
			{
				return this._Дополнительно_ячейка;
			}
			set
			{
				if ((this._Дополнительно_ячейка != value))
				{
					this._Дополнительно_ячейка = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Магазин ячейка]", Storage="_Магазин_ячейка", DbType="NVarChar(10)")]
		public string Магазин_ячейка
		{
			get
			{
				return this._Магазин_ячейка;
			}
			set
			{
				if ((this._Магазин_ячейка != value))
				{
					this._Магазин_ячейка = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Телефон магазина ячейка]", Storage="_Телефон_магазина_ячейка", DbType="NVarChar(10)")]
		public string Телефон_магазина_ячейка
		{
			get
			{
				return this._Телефон_магазина_ячейка;
			}
			set
			{
				if ((this._Телефон_магазина_ячейка != value))
				{
					this._Телефон_магазина_ячейка = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Реквизиты ячейка]", Storage="_Реквизиты_ячейка", DbType="NVarChar(10)")]
		public string Реквизиты_ячейка
		{
			get
			{
				return this._Реквизиты_ячейка;
			}
			set
			{
				if ((this._Реквизиты_ячейка != value))
				{
					this._Реквизиты_ячейка = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Магазин-название]", Storage="_Магазин_название", DbType="VarChar(50)")]
		public string Магазин_название
		{
			get
			{
				return this._Магазин_название;
			}
			set
			{
				if ((this._Магазин_название != value))
				{
					this._Магазин_название = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Магазин-телефон]", Storage="_Магазин_телефон", DbType="VarChar(50)")]
		public string Магазин_телефон
		{
			get
			{
				return this._Магазин_телефон;
			}
			set
			{
				if ((this._Магазин_телефон != value))
				{
					this._Магазин_телефон = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Реквизиты", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string Реквизиты
		{
			get
			{
				return this._Реквизиты;
			}
			set
			{
				if ((this._Реквизиты != value))
				{
					this._Реквизиты = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
