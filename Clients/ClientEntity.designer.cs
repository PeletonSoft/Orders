#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Clients
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Магазин00")]
	public partial class ClientDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertCustomer(Customer instance);
    partial void UpdateCustomer(Customer instance);
    partial void DeleteCustomer(Customer instance);
    partial void InsertReplace(Replace instance);
    partial void UpdateReplace(Replace instance);
    partial void DeleteReplace(Replace instance);
    #endregion
		
		public ClientDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ClientDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ClientDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ClientDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Customer> Customers
		{
			get
			{
				return this.GetTable<Customer>();
			}
		}
		
		public System.Data.Linq.Table<Replace> Replaces
		{
			get
			{
				return this.GetTable<Replace>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Заказы_покупатель_маска", IsComposable=true)]
		public string Заказы_покупатель_маска([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Name", DbType="NVarChar(30)")] string name)
		{
			return ((string)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), name).ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.RegExMatch", IsComposable=true)]
		public IQueryable<RegExMatchResult> RegExMatch([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Pattern", DbType="NVarChar(1000)")] string pattern, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Subject", DbType="NVarChar(1000)")] string subject)
		{
			return this.CreateMethodCallQuery<RegExMatchResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), pattern, subject);
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Заказы_покупатель")]
	public partial class Customer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Код;
		
		private string _ФИО;
		
		private string _Телефон;
		
		private string _Основной_телефон;
		
		private bool _Активен;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnКодChanging(int value);
    partial void OnКодChanged();
    partial void OnФИОChanging(string value);
    partial void OnФИОChanged();
    partial void OnТелефонChanging(string value);
    partial void OnТелефонChanged();
    partial void OnОсновной_телефонChanging(string value);
    partial void OnОсновной_телефонChanged();
    partial void OnАктивенChanging(bool value);
    partial void OnАктивенChanged();
    #endregion
		
		public Customer()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Код", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Код
		{
			get
			{
				return this._Код;
			}
			set
			{
				if ((this._Код != value))
				{
					this.OnКодChanging(value);
					this.SendPropertyChanging();
					this._Код = value;
					this.SendPropertyChanged("Код");
					this.OnКодChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ФИО", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string ФИО
		{
			get
			{
				return this._ФИО;
			}
			set
			{
				if ((this._ФИО != value))
				{
					this.OnФИОChanging(value);
					this.SendPropertyChanging();
					this._ФИО = value;
					this.SendPropertyChanged("ФИО");
					this.OnФИОChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Телефон", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string Телефон
		{
			get
			{
				return this._Телефон;
			}
			set
			{
				if ((this._Телефон != value))
				{
					this.OnТелефонChanging(value);
					this.SendPropertyChanging();
					this._Телефон = value;
					this.SendPropertyChanged("Телефон");
					this.OnТелефонChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Основной телефон]", Storage="_Основной_телефон", DbType="NVarChar(50)")]
		public string Основной_телефон
		{
			get
			{
				return this._Основной_телефон;
			}
			set
			{
				if ((this._Основной_телефон != value))
				{
					this.OnОсновной_телефонChanging(value);
					this.SendPropertyChanging();
					this._Основной_телефон = value;
					this.SendPropertyChanged("Основной_телефон");
					this.OnОсновной_телефонChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Активен", DbType="Bit NOT NULL")]
		public bool Активен
		{
			get
			{
				return this._Активен;
			}
			set
			{
				if ((this._Активен != value))
				{
					this.OnАктивенChanging(value);
					this.SendPropertyChanging();
					this._Активен = value;
					this.SendPropertyChanged("Активен");
					this.OnАктивенChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Заказы_покупатель_маски_замены")]
	public partial class Replace : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Код;
		
		private int _Приоритет;
		
		private string _Маска;
		
		private string _Замена;
		
		private int _Тип;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnКодChanging(int value);
    partial void OnКодChanged();
    partial void OnПриоритетChanging(int value);
    partial void OnПриоритетChanged();
    partial void OnМаскаChanging(string value);
    partial void OnМаскаChanged();
    partial void OnЗаменаChanging(string value);
    partial void OnЗаменаChanged();
    partial void OnТипChanging(int value);
    partial void OnТипChanged();
    #endregion
		
		public Replace()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Код", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Код
		{
			get
			{
				return this._Код;
			}
			set
			{
				if ((this._Код != value))
				{
					this.OnКодChanging(value);
					this.SendPropertyChanging();
					this._Код = value;
					this.SendPropertyChanged("Код");
					this.OnКодChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Приоритет", DbType="Int NOT NULL")]
		public int Приоритет
		{
			get
			{
				return this._Приоритет;
			}
			set
			{
				if ((this._Приоритет != value))
				{
					this.OnПриоритетChanging(value);
					this.SendPropertyChanging();
					this._Приоритет = value;
					this.SendPropertyChanged("Приоритет");
					this.OnПриоритетChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Маска", DbType="NVarChar(4000) NOT NULL", CanBeNull=false)]
		public string Маска
		{
			get
			{
				return this._Маска;
			}
			set
			{
				if ((this._Маска != value))
				{
					this.OnМаскаChanging(value);
					this.SendPropertyChanging();
					this._Маска = value;
					this.SendPropertyChanged("Маска");
					this.OnМаскаChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Замена", DbType="NVarChar(4000) NOT NULL", CanBeNull=false)]
		public string Замена
		{
			get
			{
				return this._Замена;
			}
			set
			{
				if ((this._Замена != value))
				{
					this.OnЗаменаChanging(value);
					this.SendPropertyChanging();
					this._Замена = value;
					this.SendPropertyChanged("Замена");
					this.OnЗаменаChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Тип", DbType="Int NOT NULL")]
		public int Тип
		{
			get
			{
				return this._Тип;
			}
			set
			{
				if ((this._Тип != value))
				{
					this.OnТипChanging(value);
					this.SendPropertyChanging();
					this._Тип = value;
					this.SendPropertyChanged("Тип");
					this.OnТипChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	public partial class RegExMatchResult
	{
		
		private System.Nullable<int> _MatchNumber;
		
		private string _GroupName;
		
		private System.Nullable<int> _CaptureNumber;
		
		private string _Value;
		
		public RegExMatchResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MatchNumber", DbType="Int")]
		public System.Nullable<int> MatchNumber
		{
			get
			{
				return this._MatchNumber;
			}
			set
			{
				if ((this._MatchNumber != value))
				{
					this._MatchNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupName", DbType="NVarChar(200)")]
		public string GroupName
		{
			get
			{
				return this._GroupName;
			}
			set
			{
				if ((this._GroupName != value))
				{
					this._GroupName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CaptureNumber", DbType="Int")]
		public System.Nullable<int> CaptureNumber
		{
			get
			{
				return this._CaptureNumber;
			}
			set
			{
				if ((this._CaptureNumber != value))
				{
					this._CaptureNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value", DbType="NVarChar(1000)")]
		public string Value
		{
			get
			{
				return this._Value;
			}
			set
			{
				if ((this._Value != value))
				{
					this._Value = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
